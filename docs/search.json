[{"path":[]},{"path":[]},{"path":[]},{"path":[]},{"path":"https://ahgroup.github.io/agdist/index.html/articles/quickstart.html","id":"overview","dir":"Articles","previous_headings":"","what":"Overview","title":"A quick start to agdist","text":"agdist designed allow convenient computation antigenic distance metrics influenza (possibly pathogens).","code":""},{"path":"https://ahgroup.github.io/agdist/index.html/articles/quickstart.html","id":"installation","dir":"Articles","previous_headings":"","what":"Installation","title":"A quick start to agdist","text":"agdist yet CRAN. need install GitHub follows: Install remotes package Install agdist remotes::install_github('ahgroup/agdist')","code":""},{"path":"https://ahgroup.github.io/agdist/index.html/articles/quickstart.html","id":"starting-example","dir":"Articles","previous_headings":"","what":"Starting Example","title":"A quick start to agdist","text":"simple example illustrate agdist . Consider","code":""},{"path":[]},{"path":"https://ahgroup.github.io/agdist/index.html/articles/quickstart.html","id":"next-steps","dir":"Articles","previous_headings":"","what":"Next steps","title":"A quick start to agdist","text":"just learned basics using agdist compute antigenic distances. dig deeper, continue vignette.","code":""},{"path":"https://ahgroup.github.io/agdist/index.html/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Zane Billings. Author. Andreas Handel. Author, maintainer.","code":""},{"path":"https://ahgroup.github.io/agdist/index.html/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Billings Z, Handel (2025). agdist: Antigenic Distance Calculations Influenza. R package version 0.2.0, https://ahgroup.github.io/agdist/index.html.","code":"@Manual{,   title = {agdist: Antigenic Distance Calculations for Influenza},   author = {Zane Billings and Andreas Handel},   year = {2025},   note = {R package version 0.2.0},   url = {https://ahgroup.github.io/agdist/index.html}, }"},{"path":"https://ahgroup.github.io/agdist/index.html/index.html","id":"agdist-","dir":"","previous_headings":"","what":"Antigenic Distance Calculations for Influenza","title":"Antigenic Distance Calculations for Influenza","text":"package still active development. see message, assume several parts package don’t quite work yet.","code":""},{"path":"https://ahgroup.github.io/agdist/index.html/index.html","id":"description","dir":"","previous_headings":"","what":"Description","title":"Antigenic Distance Calculations for Influenza","text":"agdist allows easy computation antigenic distances.","code":""},{"path":"https://ahgroup.github.io/agdist/index.html/index.html","id":"quick-example","dir":"","previous_headings":"","what":"Quick example","title":"Antigenic Distance Calculations for Influenza","text":"lines code produce list antigenic distances.","code":"# install if needed - package is not yet on CRAN # remotes::install_github('ahgroup/agdist') library(agdist) # load (and check) data sequencedata <- read.csv(\"sequence-file.csv\") # compute distances agdistances <- compute_distances(   sequencedata$aligned_sequences,   method = \"p-epitope\" ) # look at results agdistances"},{"path":"https://ahgroup.github.io/agdist/index.html/index.html","id":"getting-started","dir":"","previous_headings":"","what":"Getting Started","title":"Antigenic Distance Calculations for Influenza","text":"think something like interest , hop Quick Start tutorial (vignette).","code":""},{"path":"https://ahgroup.github.io/agdist/index.html/index.html","id":"further-information","dir":"","previous_headings":"","what":"Further information","title":"Antigenic Distance Calculations for Influenza","text":"dig deeper, check available vignettes/tutorials agdist. package website (already ) https://ahgroup.github.io/agdist/. can access tutorials , well additional information.","code":""},{"path":"https://ahgroup.github.io/agdist/index.html/index.html","id":"citation-and-contributors","dir":"","previous_headings":"","what":"Citation and Contributors","title":"Antigenic Distance Calculations for Influenza","text":"R package developed Zane Billings Andreas Handel. full list contributors Bibtex entry citation can found . project /partially supported NIH grants XXX.","code":""},{"path":"https://ahgroup.github.io/agdist/index.html/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"GNU Affero General Public License","title":"GNU Affero General Public License","text":"Version 3, 19 November 2007 Copyright (C) 2007 Free Software Foundation, Inc. <https://fsf.org/> Everyone permitted copy distribute verbatim copies license document, changing allowed.","code":""},{"path":"https://ahgroup.github.io/agdist/index.html/LICENSE.html","id":"preamble","dir":"","previous_headings":"","what":"Preamble","title":"GNU Affero General Public License","text":"GNU Affero General Public License free, copyleft license software kinds works, specifically designed ensure cooperation community case network server software. licenses software practical works designed take away freedom share change works. contrast, General Public Licenses intended guarantee freedom share change versions program–make sure remains free software users. speak free software, referring freedom, price. General Public Licenses designed make sure freedom distribute copies free software (charge wish), receive source code can get want , can change software use pieces new free programs, know can things. Developers use General Public Licenses protect rights two steps: (1) assert copyright software, (2) offer License gives legal permission copy, distribute /modify software. secondary benefit defending users’ freedom improvements made alternate versions program, receive widespread use, become available developers incorporate. Many developers free software heartened encouraged resulting cooperation. However, case software used network servers, result may fail come . GNU General Public License permits making modified version letting public access server without ever releasing source code public. GNU Affero General Public License designed specifically ensure , cases, modified source code becomes available community. requires operator network server provide source code modified version running users server. Therefore, public use modified version, publicly accessible server, gives public access source code modified version. older license, called Affero General Public License published Affero, designed accomplish similar goals. different license, version Affero GPL, Affero released new version Affero GPL permits relicensing license. precise terms conditions copying, distribution modification follow.","code":""},{"path":[]},{"path":"https://ahgroup.github.io/agdist/index.html/LICENSE.html","id":"id_0-definitions","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"0. Definitions.","title":"GNU Affero General Public License","text":"“License” refers version 3 GNU Affero General Public License. “Copyright” also means copyright-like laws apply kinds works, semiconductor masks. “Program” refers copyrightable work licensed License. licensee addressed “”. “Licensees” “recipients” may individuals organizations. “modify” work means copy adapt part work fashion requiring copyright permission, making exact copy. resulting work called “modified version” earlier work work “based ” earlier work. “covered work” means either unmodified Program work based Program. “propagate” work means anything , without permission, make directly secondarily liable infringement applicable copyright law, except executing computer modifying private copy. Propagation includes copying, distribution (without modification), making available public, countries activities well. “convey” work means kind propagation enables parties make receive copies. Mere interaction user computer network, transfer copy, conveying. interactive user interface displays “Appropriate Legal Notices” extent includes convenient prominently visible feature (1) displays appropriate copyright notice, (2) tells user warranty work (except extent warranties provided), licensees may convey work License, view copy License. interface presents list user commands options, menu, prominent item list meets criterion.","code":""},{"path":"https://ahgroup.github.io/agdist/index.html/LICENSE.html","id":"id_1-source-code","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"1. Source Code.","title":"GNU Affero General Public License","text":"“source code” work means preferred form work making modifications . “Object code” means non-source form work. “Standard Interface” means interface either official standard defined recognized standards body, , case interfaces specified particular programming language, one widely used among developers working language. “System Libraries” executable work include anything, work whole, () included normal form packaging Major Component, part Major Component, (b) serves enable use work Major Component, implement Standard Interface implementation available public source code form. “Major Component”, context, means major essential component (kernel, window system, ) specific operating system () executable work runs, compiler used produce work, object code interpreter used run . “Corresponding Source” work object code form means source code needed generate, install, (executable work) run object code modify work, including scripts control activities. However, include work’s System Libraries, general-purpose tools generally available free programs used unmodified performing activities part work. example, Corresponding Source includes interface definition files associated source files work, source code shared libraries dynamically linked subprograms work specifically designed require, intimate data communication control flow subprograms parts work. Corresponding Source need include anything users can regenerate automatically parts Corresponding Source. Corresponding Source work source code form work.","code":""},{"path":"https://ahgroup.github.io/agdist/index.html/LICENSE.html","id":"id_2-basic-permissions","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"2. Basic Permissions.","title":"GNU Affero General Public License","text":"rights granted License granted term copyright Program, irrevocable provided stated conditions met. License explicitly affirms unlimited permission run unmodified Program. output running covered work covered License output, given content, constitutes covered work. License acknowledges rights fair use equivalent, provided copyright law. may make, run propagate covered works convey, without conditions long license otherwise remains force. may convey covered works others sole purpose make modifications exclusively , provide facilities running works, provided comply terms License conveying material control copyright. thus making running covered works must exclusively behalf, direction control, terms prohibit making copies copyrighted material outside relationship . Conveying circumstances permitted solely conditions stated . Sublicensing allowed; section 10 makes unnecessary.","code":""},{"path":"https://ahgroup.github.io/agdist/index.html/LICENSE.html","id":"id_3-protecting-users-legal-rights-from-anti-circumvention-law","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"3. Protecting Users’ Legal Rights From Anti-Circumvention Law.","title":"GNU Affero General Public License","text":"covered work shall deemed part effective technological measure applicable law fulfilling obligations article 11 WIPO copyright treaty adopted 20 December 1996, similar laws prohibiting restricting circumvention measures. convey covered work, waive legal power forbid circumvention technological measures extent circumvention effected exercising rights License respect covered work, disclaim intention limit operation modification work means enforcing, work’s users, third parties’ legal rights forbid circumvention technological measures.","code":""},{"path":"https://ahgroup.github.io/agdist/index.html/LICENSE.html","id":"id_4-conveying-verbatim-copies","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"4. Conveying Verbatim Copies.","title":"GNU Affero General Public License","text":"may convey verbatim copies Program’s source code receive , medium, provided conspicuously appropriately publish copy appropriate copyright notice; keep intact notices stating License non-permissive terms added accord section 7 apply code; keep intact notices absence warranty; give recipients copy License along Program. may charge price price copy convey, may offer support warranty protection fee.","code":""},{"path":"https://ahgroup.github.io/agdist/index.html/LICENSE.html","id":"id_5-conveying-modified-source-versions","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"5. Conveying Modified Source Versions.","title":"GNU Affero General Public License","text":"may convey work based Program, modifications produce Program, form source code terms section 4, provided also meet conditions: work must carry prominent notices stating modified , giving relevant date. work must carry prominent notices stating released License conditions added section 7. requirement modifies requirement section 4 “keep intact notices”. must license entire work, whole, License anyone comes possession copy. License therefore apply, along applicable section 7 additional terms, whole work, parts, regardless packaged. License gives permission license work way, invalidate permission separately received . work interactive user interfaces, must display Appropriate Legal Notices; however, Program interactive interfaces display Appropriate Legal Notices, work need make . compilation covered work separate independent works, nature extensions covered work, combined form larger program, volume storage distribution medium, called “aggregate” compilation resulting copyright used limit access legal rights compilation’s users beyond individual works permit. Inclusion covered work aggregate cause License apply parts aggregate.","code":""},{"path":"https://ahgroup.github.io/agdist/index.html/LICENSE.html","id":"id_6-conveying-non-source-forms","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"6. Conveying Non-Source Forms.","title":"GNU Affero General Public License","text":"may convey covered work object code form terms sections 4 5, provided also convey machine-readable Corresponding Source terms License, one ways: Convey object code , embodied , physical product (including physical distribution medium), accompanied Corresponding Source fixed durable physical medium customarily used software interchange. Convey object code , embodied , physical product (including physical distribution medium), accompanied written offer, valid least three years valid long offer spare parts customer support product model, give anyone possesses object code either (1) copy Corresponding Source software product covered License, durable physical medium customarily used software interchange, price reasonable cost physically performing conveying source, (2) access copy Corresponding Source network server charge. Convey individual copies object code copy written offer provide Corresponding Source. alternative allowed occasionally noncommercially, received object code offer, accord subsection 6b. Convey object code offering access designated place (gratis charge), offer equivalent access Corresponding Source way place charge. need require recipients copy Corresponding Source along object code. place copy object code network server, Corresponding Source may different server (operated third party) supports equivalent copying facilities, provided maintain clear directions next object code saying find Corresponding Source. Regardless server hosts Corresponding Source, remain obligated ensure available long needed satisfy requirements. Convey object code using peer--peer transmission, provided inform peers object code Corresponding Source work offered general public charge subsection 6d. separable portion object code, whose source code excluded Corresponding Source System Library, need included conveying object code work. “User Product” either (1) “consumer product”, means tangible personal property normally used personal, family, household purposes, (2) anything designed sold incorporation dwelling. determining whether product consumer product, doubtful cases shall resolved favor coverage. particular product received particular user, “normally used” refers typical common use class product, regardless status particular user way particular user actually uses, expects expected use, product. product consumer product regardless whether product substantial commercial, industrial non-consumer uses, unless uses represent significant mode use product. “Installation Information” User Product means methods, procedures, authorization keys, information required install execute modified versions covered work User Product modified version Corresponding Source. information must suffice ensure continued functioning modified object code case prevented interfered solely modification made. convey object code work section , , specifically use , User Product, conveying occurs part transaction right possession use User Product transferred recipient perpetuity fixed term (regardless transaction characterized), Corresponding Source conveyed section must accompanied Installation Information. requirement apply neither third party retains ability install modified object code User Product (example, work installed ROM). requirement provide Installation Information include requirement continue provide support service, warranty, updates work modified installed recipient, User Product modified installed. Access network may denied modification materially adversely affects operation network violates rules protocols communication across network. Corresponding Source conveyed, Installation Information provided, accord section must format publicly documented (implementation available public source code form), must require special password key unpacking, reading copying.","code":""},{"path":"https://ahgroup.github.io/agdist/index.html/LICENSE.html","id":"id_7-additional-terms","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"7. Additional Terms.","title":"GNU Affero General Public License","text":"“Additional permissions” terms supplement terms License making exceptions one conditions. Additional permissions applicable entire Program shall treated though included License, extent valid applicable law. additional permissions apply part Program, part may used separately permissions, entire Program remains governed License without regard additional permissions. convey copy covered work, may option remove additional permissions copy, part . (Additional permissions may written require removal certain cases modify work.) may place additional permissions material, added covered work, can give appropriate copyright permission. Notwithstanding provision License, material add covered work, may (authorized copyright holders material) supplement terms License terms: Disclaiming warranty limiting liability differently terms sections 15 16 License; Requiring preservation specified reasonable legal notices author attributions material Appropriate Legal Notices displayed works containing ; Prohibiting misrepresentation origin material, requiring modified versions material marked reasonable ways different original version; Limiting use publicity purposes names licensors authors material; Declining grant rights trademark law use trade names, trademarks, service marks; Requiring indemnification licensors authors material anyone conveys material (modified versions ) contractual assumptions liability recipient, liability contractual assumptions directly impose licensors authors. non-permissive additional terms considered “restrictions” within meaning section 10. Program received , part , contains notice stating governed License along term restriction, may remove term. license document contains restriction permits relicensing conveying License, may add covered work material governed terms license document, provided restriction survive relicensing conveying. add terms covered work accord section, must place, relevant source files, statement additional terms apply files, notice indicating find applicable terms. Additional terms, permissive non-permissive, may stated form separately written license, stated exceptions; requirements apply either way.","code":""},{"path":"https://ahgroup.github.io/agdist/index.html/LICENSE.html","id":"id_8-termination","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"8. Termination.","title":"GNU Affero General Public License","text":"may propagate modify covered work except expressly provided License. attempt otherwise propagate modify void, automatically terminate rights License (including patent licenses granted third paragraph section 11). However, cease violation License, license particular copyright holder reinstated () provisionally, unless copyright holder explicitly finally terminates license, (b) permanently, copyright holder fails notify violation reasonable means prior 60 days cessation. Moreover, license particular copyright holder reinstated permanently copyright holder notifies violation reasonable means, first time received notice violation License (work) copyright holder, cure violation prior 30 days receipt notice. Termination rights section terminate licenses parties received copies rights License. rights terminated permanently reinstated, qualify receive new licenses material section 10.","code":""},{"path":"https://ahgroup.github.io/agdist/index.html/LICENSE.html","id":"id_9-acceptance-not-required-for-having-copies","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"9. Acceptance Not Required for Having Copies.","title":"GNU Affero General Public License","text":"required accept License order receive run copy Program. Ancillary propagation covered work occurring solely consequence using peer--peer transmission receive copy likewise require acceptance. However, nothing License grants permission propagate modify covered work. actions infringe copyright accept License. Therefore, modifying propagating covered work, indicate acceptance License .","code":""},{"path":"https://ahgroup.github.io/agdist/index.html/LICENSE.html","id":"id_10-automatic-licensing-of-downstream-recipients","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"10. Automatic Licensing of Downstream Recipients.","title":"GNU Affero General Public License","text":"time convey covered work, recipient automatically receives license original licensors, run, modify propagate work, subject License. responsible enforcing compliance third parties License. “entity transaction” transaction transferring control organization, substantially assets one, subdividing organization, merging organizations. propagation covered work results entity transaction, party transaction receives copy work also receives whatever licenses work party’s predecessor interest give previous paragraph, plus right possession Corresponding Source work predecessor interest, predecessor can get reasonable efforts. may impose restrictions exercise rights granted affirmed License. example, may impose license fee, royalty, charge exercise rights granted License, may initiate litigation (including cross-claim counterclaim lawsuit) alleging patent claim infringed making, using, selling, offering sale, importing Program portion .","code":""},{"path":"https://ahgroup.github.io/agdist/index.html/LICENSE.html","id":"id_11-patents","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"11. Patents.","title":"GNU Affero General Public License","text":"“contributor” copyright holder authorizes use License Program work Program based. work thus licensed called contributor’s “contributor version”. contributor’s “essential patent claims” patent claims owned controlled contributor, whether already acquired hereafter acquired, infringed manner, permitted License, making, using, selling contributor version, include claims infringed consequence modification contributor version. purposes definition, “control” includes right grant patent sublicenses manner consistent requirements License. contributor grants non-exclusive, worldwide, royalty-free patent license contributor’s essential patent claims, make, use, sell, offer sale, import otherwise run, modify propagate contents contributor version. following three paragraphs, “patent license” express agreement commitment, however denominated, enforce patent (express permission practice patent covenant sue patent infringement). “grant” patent license party means make agreement commitment enforce patent party. convey covered work, knowingly relying patent license, Corresponding Source work available anyone copy, free charge terms License, publicly available network server readily accessible means, must either (1) cause Corresponding Source available, (2) arrange deprive benefit patent license particular work, (3) arrange, manner consistent requirements License, extend patent license downstream recipients. “Knowingly relying” means actual knowledge , patent license, conveying covered work country, recipient’s use covered work country, infringe one identifiable patents country reason believe valid. , pursuant connection single transaction arrangement, convey, propagate procuring conveyance , covered work, grant patent license parties receiving covered work authorizing use, propagate, modify convey specific copy covered work, patent license grant automatically extended recipients covered work works based . patent license “discriminatory” include within scope coverage, prohibits exercise , conditioned non-exercise one rights specifically granted License. may convey covered work party arrangement third party business distributing software, make payment third party based extent activity conveying work, third party grants, parties receive covered work , discriminatory patent license () connection copies covered work conveyed (copies made copies), (b) primarily connection specific products compilations contain covered work, unless entered arrangement, patent license granted, prior 28 March 2007. Nothing License shall construed excluding limiting implied license defenses infringement may otherwise available applicable patent law.","code":""},{"path":"https://ahgroup.github.io/agdist/index.html/LICENSE.html","id":"id_12-no-surrender-of-others-freedom","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"12. No Surrender of Others’ Freedom.","title":"GNU Affero General Public License","text":"conditions imposed (whether court order, agreement otherwise) contradict conditions License, excuse conditions License. convey covered work satisfy simultaneously obligations License pertinent obligations, consequence may convey . example, agree terms obligate collect royalty conveying convey Program, way satisfy terms License refrain entirely conveying Program.","code":""},{"path":"https://ahgroup.github.io/agdist/index.html/LICENSE.html","id":"id_13-remote-network-interaction-use-with-the-gnu-general-public-license","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"13. Remote Network Interaction; Use with the GNU General Public License.","title":"GNU Affero General Public License","text":"Notwithstanding provision License, modify Program, modified version must prominently offer users interacting remotely computer network (version supports interaction) opportunity receive Corresponding Source version providing access Corresponding Source network server charge, standard customary means facilitating copying software. Corresponding Source shall include Corresponding Source work covered version 3 GNU General Public License incorporated pursuant following paragraph. Notwithstanding provision License, permission link combine covered work work licensed version 3 GNU General Public License single combined work, convey resulting work. terms License continue apply part covered work, work combined remain governed version 3 GNU General Public License.","code":""},{"path":"https://ahgroup.github.io/agdist/index.html/LICENSE.html","id":"id_14-revised-versions-of-this-license","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"14. Revised Versions of this License.","title":"GNU Affero General Public License","text":"Free Software Foundation may publish revised /new versions GNU Affero General Public License time time. new versions similar spirit present version, may differ detail address new problems concerns. version given distinguishing version number. Program specifies certain numbered version GNU Affero General Public License “later version” applies , option following terms conditions either numbered version later version published Free Software Foundation. Program specify version number GNU Affero General Public License, may choose version ever published Free Software Foundation. Program specifies proxy can decide future versions GNU Affero General Public License can used, proxy’s public statement acceptance version permanently authorizes choose version Program. Later license versions may give additional different permissions. However, additional obligations imposed author copyright holder result choosing follow later version.","code":""},{"path":"https://ahgroup.github.io/agdist/index.html/LICENSE.html","id":"id_15-disclaimer-of-warranty","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"15. Disclaimer of Warranty.","title":"GNU Affero General Public License","text":"WARRANTY PROGRAM, EXTENT PERMITTED APPLICABLE LAW. EXCEPT OTHERWISE STATED WRITING COPYRIGHT HOLDERS /PARTIES PROVIDE PROGRAM “” WITHOUT WARRANTY KIND, EITHER EXPRESSED IMPLIED, INCLUDING, LIMITED , IMPLIED WARRANTIES MERCHANTABILITY FITNESS PARTICULAR PURPOSE. ENTIRE RISK QUALITY PERFORMANCE PROGRAM . PROGRAM PROVE DEFECTIVE, ASSUME COST NECESSARY SERVICING, REPAIR CORRECTION.","code":""},{"path":"https://ahgroup.github.io/agdist/index.html/LICENSE.html","id":"id_16-limitation-of-liability","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"16. Limitation of Liability.","title":"GNU Affero General Public License","text":"EVENT UNLESS REQUIRED APPLICABLE LAW AGREED WRITING COPYRIGHT HOLDER, PARTY MODIFIES /CONVEYS PROGRAM PERMITTED , LIABLE DAMAGES, INCLUDING GENERAL, SPECIAL, INCIDENTAL CONSEQUENTIAL DAMAGES ARISING USE INABILITY USE PROGRAM (INCLUDING LIMITED LOSS DATA DATA RENDERED INACCURATE LOSSES SUSTAINED THIRD PARTIES FAILURE PROGRAM OPERATE PROGRAMS), EVEN HOLDER PARTY ADVISED POSSIBILITY DAMAGES.","code":""},{"path":"https://ahgroup.github.io/agdist/index.html/LICENSE.html","id":"id_17-interpretation-of-sections-15-and-16","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"17. Interpretation of Sections 15 and 16.","title":"GNU Affero General Public License","text":"disclaimer warranty limitation liability provided given local legal effect according terms, reviewing courts shall apply local law closely approximates absolute waiver civil liability connection Program, unless warranty assumption liability accompanies copy Program return fee. END TERMS CONDITIONS","code":""},{"path":"https://ahgroup.github.io/agdist/index.html/LICENSE.html","id":"how-to-apply-these-terms-to-your-new-programs","dir":"","previous_headings":"","what":"How to Apply These Terms to Your New Programs","title":"GNU Affero General Public License","text":"develop new program, want greatest possible use public, best way achieve make free software everyone can redistribute change terms. , attach following notices program. safest attach start source file effectively state exclusion warranty; file least “copyright” line pointer full notice found. Also add information contact electronic paper mail. software can interact users remotely computer network, also make sure provides way users get source. example, program web application, interface display “Source” link leads users archive code. many ways offer source, different solutions better different programs; see section 13 specific requirements. also get employer (work programmer) school, , sign “copyright disclaimer” program, necessary. information , apply follow GNU AGPL, see https://www.gnu.org/licenses/.","code":"<one line to give the program's name and a brief idea of what it does.>     Copyright (C) <year>  <name of author>      This program is free software: you can redistribute it and/or modify     it under the terms of the GNU Affero General Public License as     published by the Free Software Foundation, either version 3 of the     License, or (at your option) any later version.      This program is distributed in the hope that it will be useful,     but WITHOUT ANY WARRANTY; without even the implied warranty of     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the     GNU Affero General Public License for more details.      You should have received a copy of the GNU Affero General Public License     along with this program.  If not, see <https://www.gnu.org/licenses/>."},{"path":"https://ahgroup.github.io/agdist/index.html/reference/calculate_distance.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate pairwise distances between sequences using various methods — calculate_distance","title":"Calculate pairwise distances between sequences using various methods — calculate_distance","text":"function provides unified interface computing pairwise distances sequences using variety distance metrics. dispatches appropriate internal functions based specified method.","code":""},{"path":"https://ahgroup.github.io/agdist/index.html/reference/calculate_distance.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate pairwise distances between sequences using various methods — calculate_distance","text":"","code":"calculate_distance(x, method, subtype = NULL, tree = NULL, map = NULL, ...)"},{"path":"https://ahgroup.github.io/agdist/index.html/reference/calculate_distance.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate pairwise distances between sequences using various methods — calculate_distance","text":"x character vector sequences (typically amino acid nucleotide sequences). Currently, can pass NULL want use `\"cartographic\"` `\"cophenetic\"` methods without specifying sequence vector. method character string specifying distance method use. Available options include: `\"hamming\"`: Computes Hamming distance. `\"dl\"`: Computes Damerau-Levenshtein distance. `\"p-epitope\"`: Computes p-epitope distances specified subtype, default dominant p-peitope distance returned can access arguments dist_pepi. `\"p--epitope\"`: Computes p--epitope distances subtype. `\"cophenetic\"` `\"tree\"`: Computes distances based phylogenetic tree. `\"cartographic\"` `\"cartography\"`: Computes cartographic distances Racmacs map. `\"temporal\"`: Computes temporal distances based sequence names. subtype (Optional) character string indicating subtype (e.g., `\"H1\"`, `\"B\"`) use computing p-epitope distances. Required methods `\"p-epitope\"` `\"p--epitope\"`. tree (Optional) `phylo` object used `method = \"cophenetic\"` `\"tree\"`. map (Optional) Racmacs map object used `method = \"cartographic\"` `\"cartography\"`. ... Additional arguments passed corresponding distance functions.","code":""},{"path":"https://ahgroup.github.io/agdist/index.html/reference/calculate_distance.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate pairwise distances between sequences using various methods — calculate_distance","text":"numeric matrix pairwise distances input sequences.","code":""},{"path":"https://ahgroup.github.io/agdist/index.html/reference/calculate_distance.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Calculate pairwise distances between sequences using various methods — calculate_distance","text":"function acts dispatcher, validating `method` input   routing data correct underlying distance function. Required   arguments specific methods (e.g., `subtype`, `tree`, `map`) must   supplied applicable error thrown.","code":""},{"path":[]},{"path":"https://ahgroup.github.io/agdist/index.html/reference/calculate_distance.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Calculate pairwise distances between sequences using various methods — calculate_distance","text":"","code":"if (FALSE) calculate_distance(my_seq, \"hamming\") # \\dontrun{} if (FALSE) calculate_distance(my_seq, \"p-epitope\", subtype = \"A(H1N1)\") # \\dontrun{} if (FALSE) calculate_distance(my_seq, \"cartographic\", map = my_ac_map) # \\dontrun{}"},{"path":"https://ahgroup.github.io/agdist/index.html/reference/dist_pepi.html","id":null,"dir":"Reference","previous_headings":"","what":"Compute Pairwise p-Epitope Distance Matrix — dist_pepi","title":"Compute Pairwise p-Epitope Distance Matrix — dist_pepi","text":"Calculates pairwise p-epitope distances sequences character vector, using defined epitope sites given influenza subtype.","code":""},{"path":"https://ahgroup.github.io/agdist/index.html/reference/dist_pepi.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compute Pairwise p-Epitope Distance Matrix — dist_pepi","text":"","code":"dist_pepi(   seqs,   subtype,   mode = \"dominant\",   harmonize_b_lineages = TRUE,   ambiguous_residues = \"xX?\" )"},{"path":"https://ahgroup.github.io/agdist/index.html/reference/dist_pepi.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compute Pairwise p-Epitope Distance Matrix — dist_pepi","text":"seqs Named character vector amino acid sequences. string must equal length represent full-length HA protein sequence. subtype Character. Influenza subtype lineage. Currently allowed values `\"H1N1\"`, `\"(H3N2)\"`, `\"B/Yamagata\"`, `\"B/Victoria`, `\"B/Presplit`. `harmonize_b_lineages` `TRUE` can also specify just `B`. mode Character. summarize epitope-wise distances. Options: - `\"dominant\"`/`\"max\"`: return maximum epitope distance (Gupta et al. 2006). - `\"anderson\"`: average normalized distances (Anderson et al. 2018). - `\"\"`/`\"average\"`/`\"mean\"`: mean epitope residues (Pan et al. 2010). - `\"median\"`: median per-epitope distances. - `NULL` empty string: returns full vector distances. harmonize_b_lineages Logical. `TRUE`, harmonizes B lineages using unified epitope definition. Defaults `TRUE`. ambiguous_residues Character vector. Residue symbols exclude comparison (e.g. `\"xX?\"`, default).","code":""},{"path":"https://ahgroup.github.io/agdist/index.html/reference/dist_pepi.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compute Pairwise p-Epitope Distance Matrix — dist_pepi","text":"symmetric numeric matrix p-epitope distances sequence names   row column names.","code":""},{"path":"https://ahgroup.github.io/agdist/index.html/reference/dist_pepi.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Compute Pairwise p-Epitope Distance Matrix — dist_pepi","text":"function computes lower triangle distance matrix using   `pepitope()` function, mirrors fill full matrix.   Ambiguous residues removed pairwise comparison   computing distance.","code":""},{"path":"https://ahgroup.github.io/agdist/index.html/reference/dist_pepi.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Compute Pairwise p-Epitope Distance Matrix — dist_pepi","text":"- Gupta et al. (2006), PMID: 16460844 - Pan et al. (2010), PMID: 21123189 - Anderson et al. (2018), PMID: 29433425","code":""},{"path":[]},{"path":"https://ahgroup.github.io/agdist/index.html/reference/dist_string.html","id":null,"dir":"Reference","previous_headings":"","what":"Compute Pairwise Normalized String Distances Between Aligned Sequences — dist_string","title":"Compute Pairwise Normalized String Distances Between Aligned Sequences — dist_string","text":"function computes pairwise distance matrix aligned sequences using string distance metric `stringdist` package. Ambiguous residues (e.g., \"X\", \"x\", \"?\") removed distance computation. default, hamming distance compouted, stringdist::stringdist() documentation lists possible methods arguments.","code":""},{"path":"https://ahgroup.github.io/agdist/index.html/reference/dist_string.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compute Pairwise Normalized String Distances Between Aligned Sequences — dist_string","text":"","code":"dist_string(seqs, ambiguous_residues = \"xX?\", ...)"},{"path":"https://ahgroup.github.io/agdist/index.html/reference/dist_string.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compute Pairwise Normalized String Distances Between Aligned Sequences — dist_string","text":"seqs character vector list aligned sequences. ambiguous_residues character vector ambiguous residues remove sequence comparison. Defaults c(\"x\", \"X\", \"?\"). ... Additional arguments passed stringdist::stringdist() (e.g., method = \"hamming\").","code":""},{"path":"https://ahgroup.github.io/agdist/index.html/reference/dist_string.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compute Pairwise Normalized String Distances Between Aligned Sequences — dist_string","text":"symmetric numeric matrix pairwise normalized string distances.   distance normalized length cleaned first sequence   pair.","code":""},{"path":"https://ahgroup.github.io/agdist/index.html/reference/dist_string.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Compute Pairwise Normalized String Distances Between Aligned Sequences — dist_string","text":"lower triangle explicitly computed, upper   triangle filled symmetry. function assumes sequences   equal length aligned. distances normalized dividing aligned sequence length.","code":""},{"path":"https://ahgroup.github.io/agdist/index.html/reference/dist_string.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Compute Pairwise Normalized String Distances Between Aligned Sequences — dist_string","text":"","code":"seqs <- c(   \"A/H1N1/South Carolina/1/1918\" = \"mktiialsyifclvlgqdfpgndnstat\",   \"A/H3N2/Darwin/9/2021\" = \"mktiialsnilclvfaqkipgndnstat\",   \"B/Sichuan/379/1999\" = \"drictgitssnsphvvktatqgevnvtg\" ) dist_string(seqs, method = \"hamming\") #>                              A/H1N1/South Carolina/1/1918 A/H3N2/Darwin/9/2021 #> A/H1N1/South Carolina/1/1918                    0.0000000            0.2142857 #> A/H3N2/Darwin/9/2021                            0.2142857            0.0000000 #> B/Sichuan/379/1999                              1.0000000            1.0000000 #>                              B/Sichuan/379/1999 #> A/H1N1/South Carolina/1/1918                  1 #> A/H3N2/Darwin/9/2021                          1 #> B/Sichuan/379/1999                            0"},{"path":"https://ahgroup.github.io/agdist/index.html/reference/dist_substitution.html","id":null,"dir":"Reference","previous_headings":"","what":"Pairwise Substitution Distances Between Amino Acid Sequences — dist_substitution","title":"Pairwise Substitution Distances Between Amino Acid Sequences — dist_substitution","text":"Computes pairwise substitution distances aligned amino acid sequences vector, using specified substitution matrix. lower triangle distance matrix calculated reduce redundant computations.","code":""},{"path":"https://ahgroup.github.io/agdist/index.html/reference/dist_substitution.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Pairwise Substitution Distances Between Amino Acid Sequences — dist_substitution","text":"","code":"dist_substitution(seqs, method = \"grantham\", ambiguous_residues = \"xX?\")"},{"path":"https://ahgroup.github.io/agdist/index.html/reference/dist_substitution.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Pairwise Substitution Distances Between Amino Acid Sequences — dist_substitution","text":"seqs named character vector aligned amino acid sequences. sequences must equal length named. method Character string specifying substitution matrix use. Supported values \"grantham\" \"flu\" (case-insensitive). ambiguous_residues character string ambiguous residues remove computing distances.","code":""},{"path":"https://ahgroup.github.io/agdist/index.html/reference/dist_substitution.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Pairwise Substitution Distances Between Amino Acid Sequences — dist_substitution","text":"symmetric numeric matrix pairwise mean substitution distances.","code":""},{"path":"https://ahgroup.github.io/agdist/index.html/reference/dist_substitution.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Pairwise Substitution Distances Between Amino Acid Sequences — dist_substitution","text":"lower triangle matrix computed avoid redundant calculations. diagonal set zero. matrix symmetrized returned.","code":""},{"path":[]},{"path":"https://ahgroup.github.io/agdist/index.html/reference/dist_substitution.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Pairwise Substitution Distances Between Amino Acid Sequences — dist_substitution","text":"","code":"seqs <- c(   \"A/H1N1/South Carolina/1/1918\" = \"mktiialsyifclvlgqdfpgndnstat\",   \"A/H3N2/Darwin/9/2021\" = \"mktiialsnilclvfaqkipgndnstat\",   \"B/Sichuan/379/1999\" = \"drictgitssnsphvvktatqgevnvtg\" ) dist_substitution(seqs, method = \"grantham\") #>                              A/H1N1/South Carolina/1/1918 A/H3N2/Darwin/9/2021 #> A/H1N1/South Carolina/1/1918                      0.00000             13.17857 #> A/H3N2/Darwin/9/2021                             13.17857              0.00000 #> B/Sichuan/379/1999                               86.78571             81.21429 #>                              B/Sichuan/379/1999 #> A/H1N1/South Carolina/1/1918           86.78571 #> A/H3N2/Darwin/9/2021                   81.21429 #> B/Sichuan/379/1999                      0.00000"},{"path":"https://ahgroup.github.io/agdist/index.html/reference/dist_temporal.html","id":null,"dir":"Reference","previous_headings":"","what":"Compute Temporal Distance Matrix Between Sequences — dist_temporal","title":"Compute Temporal Distance Matrix Between Sequences — dist_temporal","text":"Computes pairwise distance matrix based year embedded sequence names. Supported methods `\"absolute\"` (symmetric), `\"forward\"` (x - y), `\"backward\"` (y - x).","code":""},{"path":"https://ahgroup.github.io/agdist/index.html/reference/dist_temporal.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compute Temporal Distance Matrix Between Sequences — dist_temporal","text":"","code":"dist_temporal(seqs, temp_dir = \"absolute\")"},{"path":"https://ahgroup.github.io/agdist/index.html/reference/dist_temporal.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compute Temporal Distance Matrix Between Sequences — dist_temporal","text":"seqs named character vector. names must contain 4-digit years. temp_dir method used computing temporal distance. One `\"absolute\"` (default), `\"forward\"`, `\"backward\"`.","code":""},{"path":"https://ahgroup.github.io/agdist/index.html/reference/dist_temporal.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compute Temporal Distance Matrix Between Sequences — dist_temporal","text":"square numeric matrix pairwise temporal distances.","code":""},{"path":"https://ahgroup.github.io/agdist/index.html/reference/dist_temporal.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Compute Temporal Distance Matrix Between Sequences — dist_temporal","text":"function extracts years names `seqs` using   regular expression, computes pairwise temporal distances using   specified method. distance \"backwards\" \"forwards\" semantic depends   order strain names. provided convenience.","code":""},{"path":"https://ahgroup.github.io/agdist/index.html/reference/dist_temporal.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Compute Temporal Distance Matrix Between Sequences — dist_temporal","text":"","code":"seqs <- c(   \"A/H1N1/South Carolina/1/1918\" = \"mktiialsyifclvlgqdfpgndnstatlclgh\",   \"A/H3N2/Darwin/9/2021\" = \"mktiialsnilclvfaqkipgndnstat\",   \"B/Sichuan/379/1999\" = \"drictgitssnsphvvktatqgevnvtgai\" )"},{"path":"https://ahgroup.github.io/agdist/index.html/reference/extract_string_chars.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract Specific Characters from a String by Position — extract_string_chars","title":"Extract Specific Characters from a String by Position — extract_string_chars","text":"helper function extracts one characters string using byte positions. converts input string raw bytes, selects specified positions, converts back character.","code":""},{"path":"https://ahgroup.github.io/agdist/index.html/reference/extract_string_chars.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract Specific Characters from a String by Position — extract_string_chars","text":"","code":"extract_string_chars(str, pos)"},{"path":"https://ahgroup.github.io/agdist/index.html/reference/extract_string_chars.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract Specific Characters from a String by Position — extract_string_chars","text":"str character string characters extracted. pos integer vector positions (1-based) indicating characters extract.","code":""},{"path":"https://ahgroup.github.io/agdist/index.html/reference/extract_string_chars.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract Specific Characters from a String by Position — extract_string_chars","text":"character string containing extracted characters.","code":""},{"path":"https://ahgroup.github.io/agdist/index.html/reference/extract_string_chars.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Extract Specific Characters from a String by Position — extract_string_chars","text":"often faster easier splitting string, subsetting, pasting string back together.","code":""},{"path":"https://ahgroup.github.io/agdist/index.html/reference/extract_string_chars.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Extract Specific Characters from a String by Position — extract_string_chars","text":"function operates raw byte level may behave   expected multibyte non-ASCII characters. purposes   package, validated sequence strings contain   ASCII strings work expected.","code":""},{"path":"https://ahgroup.github.io/agdist/index.html/reference/extract_string_chars.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Extract Specific Characters from a String by Position — extract_string_chars","text":"","code":"extract_string_chars(\"hello\", c(1, 2))  # Returns \"he\" #> [1] \"he\""},{"path":"https://ahgroup.github.io/agdist/index.html/reference/extract_year.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract 4-digit Years from Strings — extract_year","title":"Extract 4-digit Years from Strings — extract_year","text":"function extracts 4-digit years (range 1900–2099) vector strings.","code":""},{"path":"https://ahgroup.github.io/agdist/index.html/reference/extract_year.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract 4-digit Years from Strings — extract_year","text":"","code":"extract_year(full_name)"},{"path":"https://ahgroup.github.io/agdist/index.html/reference/extract_year.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract 4-digit Years from Strings — extract_year","text":"full_name character vector containing strings embedded 4-digit years.","code":""},{"path":"https://ahgroup.github.io/agdist/index.html/reference/extract_year.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract 4-digit Years from Strings — extract_year","text":"integer named vector years, names corresponding   input strings. year found string, corresponding value   `NA`.","code":""},{"path":"https://ahgroup.github.io/agdist/index.html/reference/extract_year.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Extract 4-digit Years from Strings — extract_year","text":"","code":"extract_year(c(   \"A/H1N1/South Carolina/1/1918\",   \"A/H3N2/Darwin/9/2021\",   \"B/Sichuan/379/1999\" )) #> A/H1N1/South Carolina/1/1918         A/H3N2/Darwin/9/2021  #>                         1918                         2021  #>           B/Sichuan/379/1999  #>                         1999  seqs <- c(   \"A/H1N1/South Carolina/1/1918\" = \"mktiialsyifclvlgqdfpgndnstatlclgh\",   \"A/H3N2/Darwin/9/2021\" = \"mktiialsnilclvfaqkipgndnstat\",   \"B/Sichuan/379/1999\" = \"drictgitssnsphvvktatqgevnvtgai\" ) extract_year(names(seqs)) #> A/H1N1/South Carolina/1/1918         A/H3N2/Darwin/9/2021  #>                         1918                         2021  #>           B/Sichuan/379/1999  #>                         1999"},{"path":"https://ahgroup.github.io/agdist/index.html/reference/generate_FLU_matrix.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate FLU Amino Acid Substitution Matrix — generate_FLU_matrix","title":"Generate FLU Amino Acid Substitution Matrix — generate_FLU_matrix","text":"Constructs FLU substitution matrix amino acid changes, based data FLU model developed Dang et al. (2010). FLU model specifically tuned influenza protein evolution formatted PAML/PhyML-style: lower triangle rate matrix followed equilibrium frequencies.","code":""},{"path":"https://ahgroup.github.io/agdist/index.html/reference/generate_FLU_matrix.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate FLU Amino Acid Substitution Matrix — generate_FLU_matrix","text":"","code":"generate_FLU_matrix()"},{"path":"https://ahgroup.github.io/agdist/index.html/reference/generate_FLU_matrix.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate FLU Amino Acid Substitution Matrix — generate_FLU_matrix","text":"20x20 numeric matrix representing FLU amino acid substitution rates,         amino acids ordered alphabetically one-letter codes.","code":""},{"path":"https://ahgroup.github.io/agdist/index.html/reference/generate_FLU_matrix.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Generate FLU Amino Acid Substitution Matrix — generate_FLU_matrix","text":"function hardcodes substitution matrix values original dataset provided Dang et al. (2010) avoid repeated file /O usage. final matrix symmetric suitable phylogenetic protein evolution analyses using FLU model.","code":""},{"path":"https://ahgroup.github.io/agdist/index.html/reference/generate_FLU_matrix.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Generate FLU Amino Acid Substitution Matrix — generate_FLU_matrix","text":"- Dang, C.C., Le, Q.S., Gascuel, O., & Le, V.S. (2010). FLU, amino acid substitution model influenza proteins. *BMC Evolutionary Biology*, 10, 99. doi:10.1186/1471-2148-10-99  - Source file available : ftp://ftp.sanger.ac.uk/pub/1000genomes/lsq/FLU","code":""},{"path":"https://ahgroup.github.io/agdist/index.html/reference/generate_grantham_matrix.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate Grantham Distance Matrix — generate_grantham_matrix","title":"Generate Grantham Distance Matrix — generate_grantham_matrix","text":"Computes 20x20 symmetric matrix pairwise Grantham distances amino acids.","code":""},{"path":"https://ahgroup.github.io/agdist/index.html/reference/generate_grantham_matrix.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate Grantham Distance Matrix — generate_grantham_matrix","text":"","code":"generate_grantham_matrix()"},{"path":"https://ahgroup.github.io/agdist/index.html/reference/generate_grantham_matrix.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate Grantham Distance Matrix — generate_grantham_matrix","text":"20x20 numeric matrix row column names corresponding   one-letter codes amino acids (lowercase), cell contains   Grantham distance corresponding pair amino acids.","code":""},{"path":"https://ahgroup.github.io/agdist/index.html/reference/generate_grantham_matrix.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Generate Grantham Distance Matrix — generate_grantham_matrix","text":"matrix uses amino acid order Grantham distance table Wikipedia, based Grantham (1984) [DOI:10.1126/science.185.4154.862]. distances reflect differences composition, polarity, molecular volume amino acid side chains. function optimized speed runs quickly enough regenerating matrix call faster saving/loading disk.","code":""},{"path":"https://ahgroup.github.io/agdist/index.html/reference/generate_grantham_matrix.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Generate Grantham Distance Matrix — generate_grantham_matrix","text":"- Grantham (1984) [DOI:10.1126/science.185.4154.862]","code":""},{"path":"https://ahgroup.github.io/agdist/index.html/reference/generate_grantham_matrix.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Generate Grantham Distance Matrix — generate_grantham_matrix","text":"","code":"grantham_matrix <- generate_grantham_matrix() grantham_matrix[\"a\", \"v\"] #> [1] 64"},{"path":"https://ahgroup.github.io/agdist/index.html/reference/get_pepitope_sites.html","id":null,"dir":"Reference","previous_headings":"","what":"Retrieve Epitope Residue Sites for Influenza HA Subtypes — get_pepitope_sites","title":"Retrieve Epitope Residue Sites for Influenza HA Subtypes — get_pepitope_sites","text":"function returns epitope residue positions (sites –E optionally sites combined) given influenza HA subtype. supports H1N1, H3N2, influenza B lineages (Victoria, Yamagata, pre-split) options harmonizing B lineages adjusting signal peptide inclusion.","code":""},{"path":"https://ahgroup.github.io/agdist/index.html/reference/get_pepitope_sites.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Retrieve Epitope Residue Sites for Influenza HA Subtypes — get_pepitope_sites","text":"","code":"get_pepitope_sites(   subtype,   sites = c(\"a\", \"b\", \"c\", \"d\", \"e\"),   harmonize_b_lineages = TRUE,   seq_includes_signal_peptide = TRUE )"},{"path":"https://ahgroup.github.io/agdist/index.html/reference/get_pepitope_sites.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Retrieve Epitope Residue Sites for Influenza HA Subtypes — get_pepitope_sites","text":"subtype Character. HA subtype lineage, e.g., `\"H1N1\"`, `\"(H3N2)\"`, `\"B/Victoria\"`, etc. sites Character vector. epitope sites return. Must subset `c(\"\", \"b\", \"c\", \"d\", \"e\", \"all_epitopes\")`. Defaults `c(\"\", \"b\", \"c\", \"d\", \"e\")`. harmonize_b_lineages Logical. `TRUE`, merges B lineages unified \"B\" category. Defaults `TRUE`. seq_includes_signal_peptide Logical. `TRUE`, epitope sites offset length HA signal peptide. Defaults `TRUE`.","code":""},{"path":"https://ahgroup.github.io/agdist/index.html/reference/get_pepitope_sites.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Retrieve Epitope Residue Sites for Influenza HA Subtypes — get_pepitope_sites","text":"named list integer vectors, names corresponding   requested `sites`.","code":""},{"path":"https://ahgroup.github.io/agdist/index.html/reference/get_pepitope_sites.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Retrieve Epitope Residue Sites for Influenza HA Subtypes — get_pepitope_sites","text":"","code":"get_pepitope_sites(\"A(H1N1)\", sites = c(\"a\", \"b\")) #> $a #>  [1] 135 137 138 139 143 144 145 146 149 150 151 152 154 156 157 158 159 160 163 #> [20] 164 166 182 269 270 #>  #> $b #>  [1] 141 142 169 170 171 172 173 174 177 179 200 201 202 203 204 206 207 208 210 #> [20] 211 212 213 #>  get_pepitope_sites(\"B/Yamagata\", harmonize_b_lineages = FALSE) #> $a #>  [1] 135 136 137 139 140 148 149 150 151 153 155 156 158 160 161 162 163 164 165 #> [20] 169 171 190 #>  #> $b #>  [1] 141 143 147 174 175 176 177 178 179 181 185 187 209 210 211 212 213 215 216 #> [20] 217 219 220 221 222 #>  #> $c #>  [1]  48  49  50  51  52  53  54 302 304 305 306 307 322 328 330 331 333 334 336 #> [20] 337 338 339 340 #>  #> $d #>  [1] 107 115 116 130 134 189 192 193 195 196 197 198 199 200 201 203 225 227 231 #> [20] 232 233 236 237 238 239 240 241 242 243 246 255 256 257 258 259 267 268 269 #> [39] 270 271 #>  #> $e #>  [1]  56  58  62  70  72  73  77  85  87  89  91  92  93  94  97  98  99 102 103 #> [20] 105 122 286 289 290 293 #>"},{"path":"https://ahgroup.github.io/agdist/index.html/reference/hello.html","id":null,"dir":"Reference","previous_headings":"","what":"Hello, World! — hello","title":"Hello, World! — hello","text":"Prints 'Hello, world!'.","code":""},{"path":"https://ahgroup.github.io/agdist/index.html/reference/hello.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Hello, World! — hello","text":"","code":"hello()"},{"path":"https://ahgroup.github.io/agdist/index.html/reference/hello.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Hello, World! — hello","text":"","code":"hello() #> [1] \"Hello, world!\""},{"path":"https://ahgroup.github.io/agdist/index.html/reference/pepitope.html","id":null,"dir":"Reference","previous_headings":"","what":"Compute p-Epitope Distance Between Two Sequences — pepitope","title":"Compute p-Epitope Distance Between Two Sequences — pepitope","text":"Calculates p-epitope antigenic distance two aligned amino acid sequences influenza HA using epitope residue sites defined specified subtype. Several summary modes supported, including dominant (maximum), mean, median, Anderson's average definition.","code":""},{"path":"https://ahgroup.github.io/agdist/index.html/reference/pepitope.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compute p-Epitope Distance Between Two Sequences — pepitope","text":"","code":"pepitope(   seq_1,   seq_2,   subtype,   mode = \"dominant\",   harmonize_b_lineages = TRUE,   ambiguous_residues = \"xX?\" )"},{"path":"https://ahgroup.github.io/agdist/index.html/reference/pepitope.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compute p-Epitope Distance Between Two Sequences — pepitope","text":"seq_1, seq_2 Character strings. Aligned amino acid sequences. subtype Character. HA subtype lineage (e.g., `\"H1N1\"`, `\"H3N2\"`, `\"B/Victoria\"`). mode Character. Summary mode apply across epitope sites. Options: `\"dominant\"` (default), `\"mean\"`, `\"median\"`, `\"anderson\"`, `epitope` return per-epitope distances. harmonize_b_lineages Logical. Whether treat B lineages unified. Defaults `TRUE`. ambiguous_residues Optional argument (currently unused).","code":""},{"path":"https://ahgroup.github.io/agdist/index.html/reference/pepitope.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compute p-Epitope Distance Between Two Sequences — pepitope","text":"single numeric value (summary distance) numeric vector   normalized distances per epitope site `mode` `NULL`.","code":""},{"path":"https://ahgroup.github.io/agdist/index.html/reference/pepitope.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Compute p-Epitope Distance Between Two Sequences — pepitope","text":"- Gupta et al. (2006), PMID: 16460844 - Pan et al. (2010), PMID: 21123189 - Anderson et al. (2018), PMID: 29433425","code":""},{"path":"https://ahgroup.github.io/agdist/index.html/reference/racmaps_map_to_distances.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert Racmacs Map to Pairwise Distance Matrix — racmaps_map_to_distances","title":"Convert Racmacs Map to Pairwise Distance Matrix — racmaps_map_to_distances","text":"utility function converts output fitted Racmacs map pairwise Euclidean distance matrix antigenic strains.","code":""},{"path":"https://ahgroup.github.io/agdist/index.html/reference/racmaps_map_to_distances.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert Racmacs Map to Pairwise Distance Matrix — racmaps_map_to_distances","text":"","code":"racmaps_map_to_distances(map)"},{"path":"https://ahgroup.github.io/agdist/index.html/reference/racmaps_map_to_distances.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert Racmacs Map to Pairwise Distance Matrix — racmaps_map_to_distances","text":"map fitted Racmacs map object, typically result Racmacs optimization run. map must contain 2D coordinates antigen (strain).","code":""},{"path":"https://ahgroup.github.io/agdist/index.html/reference/racmaps_map_to_distances.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert Racmacs Map to Pairwise Distance Matrix — racmaps_map_to_distances","text":"symmetric matrix pairwise Euclidean distances strains,   row column names corresponding strain names.","code":""},{"path":"https://ahgroup.github.io/agdist/index.html/reference/racmaps_map_to_distances.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Convert Racmacs Map to Pairwise Distance Matrix — racmaps_map_to_distances","text":"function extracts 2D coordinates antigens   Racmacs map computes Euclidean distances pairs.   lower triangle explicitly computed, upper triangle filled   symmetry.","code":""},{"path":"https://ahgroup.github.io/agdist/index.html/reference/racmaps_map_to_distances.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Convert Racmacs Map to Pairwise Distance Matrix — racmaps_map_to_distances","text":"","code":"if (FALSE) { # \\dontrun{   map <- Racmacs::read.acmap(\"my_map_file.ace\")   distance_matrix <- racmaps_map_to_distances(map)   print(distance_matrix) } # }"},{"path":"https://ahgroup.github.io/agdist/index.html/reference/remove_ambiguous_residues.html","id":null,"dir":"Reference","previous_headings":"","what":"Remove ambiguous residues from aligned sequences — remove_ambiguous_residues","title":"Remove ambiguous residues from aligned sequences — remove_ambiguous_residues","text":"function removes positions containing specified ambiguous residues (e.g., \"X\") character vector aligned sequences. Removal performed listwise—.e., position containing ambiguous residue sequence removed sequences. ensures sequences remain aligned.","code":""},{"path":"https://ahgroup.github.io/agdist/index.html/reference/remove_ambiguous_residues.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Remove ambiguous residues from aligned sequences — remove_ambiguous_residues","text":"","code":"remove_ambiguous_residues(seqs, ambiguous_residues = \"xX?\")"},{"path":"https://ahgroup.github.io/agdist/index.html/reference/remove_ambiguous_residues.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Remove ambiguous residues from aligned sequences — remove_ambiguous_residues","text":"seqs character vector aligned amino acid sequences. Sequences may optionally named. ambiguous_residues length-1 character string character represents residue treat ambiguous. Defaults `\"xX?\"`.","code":""},{"path":"https://ahgroup.github.io/agdist/index.html/reference/remove_ambiguous_residues.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Remove ambiguous residues from aligned sequences — remove_ambiguous_residues","text":"character vector length `seqs`, names   (), positions containing ambiguous residues sequence   removed.","code":""},{"path":"https://ahgroup.github.io/agdist/index.html/reference/remove_ambiguous_residues.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Remove ambiguous residues from aligned sequences — remove_ambiguous_residues","text":"`ambiguous_residues` empty string `\"\"`, residues removed. common modification required distance metrics adding gap character `ambiguous_residies`, .e., `\"xX?-\"`.","code":""},{"path":"https://ahgroup.github.io/agdist/index.html/reference/remove_ambiguous_residues.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Remove ambiguous residues from aligned sequences — remove_ambiguous_residues","text":"","code":"seqs <- c(a = \"ACDXFG\", b = \"AXCXFG\", c = \"ACDYFG\") remove_ambiguous_residues(seqs) #>      a      b      c  #> \"ADFG\" \"ACFG\" \"ADFG\"  # Returns c(a = \"ACFG\", b = \"ACFG\", c = \"ACFG\")"},{"path":"https://ahgroup.github.io/agdist/index.html/reference/substitution.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate Substitution Distance Between Amino Acid Sequences — substitution","title":"Calculate Substitution Distance Between Amino Acid Sequences — substitution","text":"Computes average substitution distance two aligned amino acid sequences based specified substitution matrix. Currently supports Grantham FLU matrices.","code":""},{"path":"https://ahgroup.github.io/agdist/index.html/reference/substitution.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate Substitution Distance Between Amino Acid Sequences — substitution","text":"","code":"substitution(seq1, seq2, method = \"grantham\", ambiguous_residues = \"xX?-\")"},{"path":"https://ahgroup.github.io/agdist/index.html/reference/substitution.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate Substitution Distance Between Amino Acid Sequences — substitution","text":"seq1 character string representing first aligned amino acid sequence. seq2 character string representing second aligned amino acid sequence. method Character string specifying substitution matrix use. Supported values \"grantham\" \"flu\" (case-insensitive). ambiguous_residues character string ambiguous residues remove computing distance.","code":""},{"path":"https://ahgroup.github.io/agdist/index.html/reference/substitution.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate Substitution Distance Between Amino Acid Sequences — substitution","text":"numeric scalar representing mean substitution distance   seq1 seq2.","code":""},{"path":"https://ahgroup.github.io/agdist/index.html/reference/substitution.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Calculate Substitution Distance Between Amino Acid Sequences — substitution","text":"function first removes ambiguous residues sequences   using remove_ambiguous_residues, validates remaining   residues, computes pairwise distances using substitution matrix.   result normalized sequence length. Eventually plan support matrices like BLOSUM Sneath's index.   want use specific substitution matrix please let us know.","code":""},{"path":"https://ahgroup.github.io/agdist/index.html/reference/substitution.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Calculate Substitution Distance Between Amino Acid Sequences — substitution","text":"- Grantham, R. (1974). Amino acid difference formula help explain protein evolution. Science, 185(4154), 862-864. doi:10.1126/science.185.4154.862 - Dang, C.C., Le, Q.S., Gascuel, O., & Lartillot, N. (2010). FLU, amino acid substitution model influenza proteins. BMC Evolutionary Biology, 10, 99. doi:10.1186/1471-2148-10-99","code":""},{"path":[]},{"path":"https://ahgroup.github.io/agdist/index.html/reference/tidy_dist_mat.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert a distance matrix to tidy format — tidy_dist_mat","title":"Convert a distance matrix to tidy format — tidy_dist_mat","text":"Transforms square numeric distance matrix long-format tibble customizable names row column variables. Optionally, returns unique row-column combinations (.e., lower triangle).","code":""},{"path":"https://ahgroup.github.io/agdist/index.html/reference/tidy_dist_mat.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert a distance matrix to tidy format — tidy_dist_mat","text":"","code":"tidy_dist_mat(   d,   rows_to = \"Strain1\",   cols_to = \"Strain2\",   unique_pairs = FALSE )"},{"path":"https://ahgroup.github.io/agdist/index.html/reference/tidy_dist_mat.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert a distance matrix to tidy format — tidy_dist_mat","text":"d square numeric matrix (coercible one) row column names. rows_to string (length 1) naming new column row labels. Default `\"Strain1\"`. cols_to string (length 1) naming new column column labels. Default `\"Strain2\"`. unique_pairs Logical (length 1). `TRUE`, return unique row-column combinations lower triangle diagonal matrix. Defaults `FALSE`.","code":""},{"path":"https://ahgroup.github.io/agdist/index.html/reference/tidy_dist_mat.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert a distance matrix to tidy format — tidy_dist_mat","text":"tibble long format columns: [rows_to] Factor, ordered row order `d` [cols_to] Factor, ordered reversed column order `d` d Distance value row column entries","code":""},{"path":"https://ahgroup.github.io/agdist/index.html/reference/tidy_dist_mat.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Convert a distance matrix to tidy format — tidy_dist_mat","text":"","code":"mat <- matrix(1:9, nrow = 3) rownames(mat) <- colnames(mat) <- c(\"A\", \"B\", \"C\") tidy_dist_mat(mat) #> # A tibble: 9 × 3 #>   Strain1 Strain2     d #>   <fct>   <fct>   <int> #> 1 A       A           1 #> 2 A       B           4 #> 3 A       C           7 #> 4 B       A           2 #> 5 B       B           5 #> 6 B       C           8 #> 7 C       A           3 #> 8 C       B           6 #> 9 C       C           9 tidy_dist_mat(mat, unique_pairs = TRUE) #> # A tibble: 6 × 3 #>   Strain1 Strain2     d #>   <fct>   <fct>   <int> #> 1 A       A           1 #> 2 B       A           2 #> 3 B       B           5 #> 4 C       A           3 #> 5 C       B           6 #> 6 C       C           9"},{"path":"https://ahgroup.github.io/agdist/index.html/reference/tree_to_distances.default.html","id":null,"dir":"Reference","previous_headings":"","what":"Default method for `tree_to_distances` — tree_to_distances.default","title":"Default method for `tree_to_distances` — tree_to_distances.default","text":"method called `tree_to_distances()` used unsupported object class. prints informative message listing available methods.","code":""},{"path":"https://ahgroup.github.io/agdist/index.html/reference/tree_to_distances.default.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Default method for `tree_to_distances` — tree_to_distances.default","text":"","code":"# Default S3 method tree_to_distances(x, ...)"},{"path":"https://ahgroup.github.io/agdist/index.html/reference/tree_to_distances.default.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Default method for `tree_to_distances` — tree_to_distances.default","text":"x object unsupported class. ... used.","code":""},{"path":"https://ahgroup.github.io/agdist/index.html/reference/tree_to_distances.default.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Default method for `tree_to_distances` — tree_to_distances.default","text":"return value; prints message console.","code":""},{"path":"https://ahgroup.github.io/agdist/index.html/reference/tree_to_distances.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract distances from a phylogenetic tree — tree_to_distances","title":"Extract distances from a phylogenetic tree — tree_to_distances","text":"Computes distance matrix tree object.","code":""},{"path":"https://ahgroup.github.io/agdist/index.html/reference/tree_to_distances.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract distances from a phylogenetic tree — tree_to_distances","text":"","code":"tree_to_distances(x, ...)"},{"path":"https://ahgroup.github.io/agdist/index.html/reference/tree_to_distances.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract distances from a phylogenetic tree — tree_to_distances","text":"x object representing phylogenetic tree similar structure. ... Additional arguments passed methods.","code":""},{"path":"https://ahgroup.github.io/agdist/index.html/reference/tree_to_distances.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract distances from a phylogenetic tree — tree_to_distances","text":"numeric matrix pairwise distances tips.","code":""},{"path":"https://ahgroup.github.io/agdist/index.html/reference/tree_to_distances.phylo.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract distances from a phylo object — tree_to_distances.phylo","title":"Extract distances from a phylo object — tree_to_distances.phylo","text":"Computes pairwise cophenetic distance matrix phylogenetic tree class `phylo`. output sorted tip labels.","code":""},{"path":"https://ahgroup.github.io/agdist/index.html/reference/tree_to_distances.phylo.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract distances from a phylo object — tree_to_distances.phylo","text":"","code":"# S3 method for class 'phylo' tree_to_distances(x, ...)"},{"path":"https://ahgroup.github.io/agdist/index.html/reference/tree_to_distances.phylo.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract distances from a phylo object — tree_to_distances.phylo","text":"x phylogenetic tree class `phylo` (`ape` package). ... used.","code":""},{"path":"https://ahgroup.github.io/agdist/index.html/reference/tree_to_distances.phylo.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract distances from a phylo object — tree_to_distances.phylo","text":"object class `dist`, distances sorted tip labels.","code":""},{"path":"https://ahgroup.github.io/agdist/index.html/reference/tree_to_distances.pml.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract distances from a pml object — tree_to_distances.pml","title":"Extract distances from a pml object — tree_to_distances.pml","text":"Computes pairwise cophenetic distance matrix phylogenetic tree class `pml` produced `phangorn` package. output sorted tip labels.","code":""},{"path":"https://ahgroup.github.io/agdist/index.html/reference/tree_to_distances.pml.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract distances from a pml object — tree_to_distances.pml","text":"","code":"# S3 method for class 'pml' tree_to_distances(x, ...)"},{"path":"https://ahgroup.github.io/agdist/index.html/reference/tree_to_distances.pml.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract distances from a pml object — tree_to_distances.pml","text":"x phylogenetic tree class `pml` (`phangorn` package). ... used.","code":""},{"path":"https://ahgroup.github.io/agdist/index.html/reference/tree_to_distances.pml.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract distances from a pml object — tree_to_distances.pml","text":"object class `dist`, distances sorted tip labels.","code":""},{"path":"https://ahgroup.github.io/agdist/index.html/reference/validate_sequence_input_form.html","id":null,"dir":"Reference","previous_headings":"","what":"Validate a sequence vector — validate_sequence_input_form","title":"Validate a sequence vector — validate_sequence_input_form","text":"input vector must character vector. Additional checks can imposed require_alignment require_names arguments.","code":""},{"path":"https://ahgroup.github.io/agdist/index.html/reference/validate_sequence_input_form.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Validate a sequence vector — validate_sequence_input_form","text":"","code":"validate_sequence_input_form(   seqs,   require_alignment = TRUE,   require_names = FALSE )"},{"path":"https://ahgroup.github.io/agdist/index.html/reference/validate_sequence_input_form.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Validate a sequence vector — validate_sequence_input_form","text":"seqs (named) character vector sequences. value amino acid HA sequence, name name strain isolate sequence. require_alignment Logical. TRUE, checks sequences length. require_names Logical. TRUE, checks sequences named.","code":""},{"path":"https://ahgroup.github.io/agdist/index.html/reference/validate_sequence_input_form.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Validate a sequence vector — validate_sequence_input_form","text":"`seqs` (invisibly). Errors early validation check fails.","code":""},{"path":"https://ahgroup.github.io/agdist/index.html/zb-notes.html","id":null,"dir":"","previous_headings":"","what":"Zane’s notes","title":"Zane’s notes","text":"right now think user’s job. functions accept character vector aligned sequences argument. Importing aligning sequences shouldn’t job package, already multiple specialized packages . right now sequences accept character vector compute distances pairwise entry. think ideally function cor() style x y argument default y NULL, specify x y function computes distances elementwise comparisons (.e. dist(x[1], y[1]), dist(x[2], y[2]), ...) instead pairwise option. string distances: basically just interface stringdist preprocessing, ’s written anything ... gets passed stringdist function. Right now get automatically length-normalized probably argument whether get normalized. didn’t write p-epitopes crazy way Andreas wanted , wants users able supply sites needs add functionality. doesn’t even really make sense p-epitope B strains either. dominant pepitope p--epitope grantham FLU sub also probably needs method strain names, method vector years. probably try autodetect, also allow users manually specify . can expose extract_years() function users allow actual numbers temporal distance calculation function, require users processing step. main method compute_distances() look names. functions need trees: package shouldn’t build trees users, ’s already lot packages . unfortunately ’s much standardization trees, probably just write multiple methods support multiple different tree formats. can start supporting R package phangorn provide instructions decent default tree, building tree isn’t really job aren’t experts. cartography: package shouldn’t build cartographies users. tell use Racmacs. Instead, distance function accept Racmacs output file (typically .acmap) racmacs object input. Wrapper: compute_distances() take named sequence vector x first input. names correspond strain names, values ALIGNED protein sequences. also ... argument pass specific details distance functions. able compute one distance time unless can come different API works distances without overloading ....","code":""},{"path":"https://ahgroup.github.io/agdist/index.html/news/index.html","id":"agdist-020-2025-05-28","dir":"Changelog","previous_headings":"","what":"agdist 0.2.0 (2025-05-28)","title":"agdist 0.2.0 (2025-05-28)","text":"Adds first working version following distance metrics: pp-epitope, temporal, hamming, DL. Adds first working version functions turn acmaps trees distance matrices without comparing vector sequences names. Adds first working version calculate_distance(), unified interface distance functions.","code":""},{"path":"https://ahgroup.github.io/agdist/index.html/news/index.html","id":"agdist-001-2025-05-07","dir":"Changelog","previous_headings":"","what":"agdist 0.0.1 (2025-05-07)","title":"agdist 0.0.1 (2025-05-07)","text":"Start package.","code":""}]
